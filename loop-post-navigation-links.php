<?php
/*
Plugin Name: Loop Post Navigation Links
Version: 1.0
Plugin URI: http://coffee2code.com/wp-plugins/loop-post-navigation-links
Author: Scott Reilly
Author URI: http://coffee2code.com
Description: Adds next_or_loop_post_link() and previous_or_loop_post_link() template tags to loop back to the beginning/end post when at the end/beginning post single page.

Compatible with WordPress 2.0+, 2.1+, 2.2+, and 2.3+.

=>> Read the accompanying readme.txt file for more information.  Also, visit the plugin's homepage
=>> for more information and the latest updates

Installation:

1. Download the file http://coffee2code.com/wp-plugins/loop-post-navigation-links.zip and unzip it into your 
/wp-content/plugins/ directory.
2. Activate the plugin through the 'Plugins' admin menu in WordPress
3. Use next_or_loop_post_link() template tag instead of next_post_link(), and/or previous_or_loop_post_link() template tag
instead of previous_post_link(), in your single-post template (single.php).

*/

/*
Copyright (c) 2008 by Scott Reilly (aka coffee2code)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation 
files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, 
modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the 
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/
$c2c_find_last_post = false;
$c2c_find_first_post = false;

function next_or_loop_post_link($format='%link &raquo;', $link='%title', $in_same_cat = false, $excluded_categories = '') {
	$post = get_next_post($in_same_cat, $excluded_categories);

	// The only modification of next_post_link() -- get the first post if there isn't a legitimate next post
	if ( !$post ) {
		global $c2c_find_first_post;
		$c2c_find_first_post = true;
		$post = get_next_post($in_same_cat, $excluded_categories);
		$c2c_find_first_post = false;
	}

	if ( !$post )
		return;

	$title = $post->post_title;

	if ( empty($post->post_title) )
		$title = __('Next Post');

	$title = apply_filters('the_title', $title, $post);
	$string = '<a href="'.get_permalink($post->ID).'">';
	$link = str_replace('%title', $title, $link);
	$link = $string . $link . '</a>';
	$format = str_replace('%link', $link, $format);

	echo $format;
}

function previous_or_loop_post_link($format='&laquo; %link', $link='%title', $in_same_cat = false, $excluded_categories = '') {

	if ( is_attachment() )
		$post = & get_post($GLOBALS['post']->post_parent);
	else
		$post = get_previous_post($in_same_cat, $excluded_categories);

	// The only modification of previous_post_link() -- get the last post if there isn't a legitimate previous post
	if ( !$post ) {
		global $c2c_find_last_post;
		$c2c_find_last_post = true;
		$post = get_previous_post($in_same_cat, $excluded_categories);
		$c2c_find_last_post = false;
	}

	if ( !$post )
		return;

	$title = $post->post_title;

	if ( empty($post->post_title) )
		$title = __('Previous Post');

	$title = apply_filters('the_title', $title, $post);
	$string = '<a href="'.get_permalink($post->ID).'">';
	$link = str_replace('%title', $title, $link);
	$link = $pre . $string . $link . '</a>';

	$format = str_replace('%link', $link, $format);

	echo $format;
}

function c2c_modify_nextprevious_post_where( $where ) {
	// The incoming WHERE statement generated by WordPress is a condition for the date, relative to the current
	//	post's date.  To find the post we want, we just need to get rid of that condition and retain the others.
	global $c2c_find_last_post, $c2c_find_first_post;
	if ( $c2c_find_last_post || $c2c_find_first_post )
		$where = preg_replace('/WHERE (.+) AND/imsU', 'WHERE', $where);
	return $where;
}
add_filter('get_next_post_where', 'c2c_modify_nextprevious_post_where');
add_filter('get_previous_post_where', 'c2c_modify_nextprevious_post_where');
?>